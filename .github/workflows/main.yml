name: Test Action

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: ./
        with:
          description: "hogehoge"
          version: "0.1.0"
          email: "39184410+ryohidaka@users.noreply.github.com"
          remove-license: true
          excluded: "test/excluded-dir, test/excluded-file.txt"
          template-dir: ".github/template"
          remove-template-dir: true
          pre-commit-script: |
            echo "Running pre-commit script..."
          dryrun: true

      - name: Install jq
        run: sudo apt-get install jq
        shell: bash

      - name: Check package.json
        run: |
          DESCRIPTION=$(jq -r .description package.json)
          if [ "$DESCRIPTION" != "hogehoge" ]; then
            echo "::error:: Description in package.json is not 'hogehoge'. It is '$DESCRIPTION'."
            exit 1
          fi

          LICENSE=$(jq -r .license package.json)
          if [ "$LICENSE" != "null" ]; then
            echo "::error:: License is present in package.json. It is '$LICENSE'."
            exit 1
          fi

      - name: Check for excluded paths
        run: |
          if [ -d "test/excluded-dir" ] || [ -f "test/excluded-file.txt" ]; then
            echo "::error:: Excluded paths found!"
            exit 1
          fi

      - name: Check for template is copied
        run: |
          if [ ! -d "test-dir" ] || [ ! -f "test-file.txt" ]; then
            echo "::error:: Required paths not found!"
            exit 1
          fi

      - name: Check for workflows is copied
        run: |
          if [ ! -f ".github/workflows/test-action.yml" ]; then
            echo "::error:: Required paths not found!"
            exit 1
          fi
          cat .github/workflows/test-action.yml

      - name: Check for template is removed
        run: |
          if [ -d ".github/template" ]; then
            echo "::error:: Template paths found!"
            exit 1
          fi

      - name: Check if README starts with specific value
        run: |
          NAME="# nodejs-cleanup"
          if [[ $(head -n 1 README.md) != "$NAME"* ]]; then
             echo "::error:: README.md does not start with $NAME"
            exit 1           
          fi
